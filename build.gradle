apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: "project-report"

group 'com.fangdd'
version '1.0.3.3'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-redis:2.0.8.RELEASE")

    compileOnly("com.alibaba:dubbo:2.6.1") {
        exclude group: "org.springframework", module: "spring-core"
        exclude group: "org.springframework", module: "spring-context"
        exclude group: "org.springframework", module: "spring-aop"
        exclude group: "org.springframework", module: "spring-expression"
    }
    compileOnly "javax.servlet:javax.servlet-api:3.1.0"

    compile "com.dianping.cat:cat-client:3.0.2"
    compile "com.fangdd.logtrace:logtraceutil:1.1.0"
    compile "com.alibaba:fastjson:1.2.41"
    compile 'commons-lang:commons-lang:2.6'
    compile 'com.esotericsoftware:kryo-shaded:3.0.3'
    compile "redis.clients:jedis:2.9.0"

    compile 'org.springframework:spring-aspects:3.2.8.RELEASE'
    compile 'org.springframework:spring-orm:3.2.8.RELEASE'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9.3'


    testCompile "org.springframework.boot:spring-boot-starter-test:2.0.8.RELEASE"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    maven { url "http://nexus.nh.fangdd.cn/nexus/content/groups/public/" }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "spring-boot-starter-redis"

            from components.java

            pom.withXml {
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'compile'
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username rootProject['releaseRepository.username']
                password rootProject['releaseRepository.password']
            }
            if (project.version.endsWith('-SNAPSHOT')) {
                url rootProject['snapshotRepository.url']
            } else {
                url rootProject['releaseRepository.url']
            }
        }
    }
}
